{"name":"Matrix-groovy-execution-strategy-plugin","tagline":"Dynamically select Jenkins matrix combinations to use","body":"# A groovy script to decide the order of matrix project combinations\r\n\r\n## Bindings\r\nThere are several variables available in the script\r\n\r\n* combinations\r\n* workspace\r\n* jenkins\r\n* execution\r\n* result\r\n\r\n### Combinationss\r\nThis is a List of a String map of all the matrix combinations\r\nFor example \r\n```groovy\r\n[\r\n    { axis1: \"a\", axis2: \"x\" },\r\n    { axis1: \"a\", axis2: \"y\" },\r\n    { axis1: \"a\", axis2: \"z\" },\r\n    { axis1: \"b\", axis2: \"x\" },\r\n    { axis1: \"b\", axis2: \"y\" },\r\n    { axis1: \"b\", axis2: \"z\" }\r\n]\r\n```\r\n\r\n### workspace\r\na string of the workspace\r\n\r\n### execution \r\nThe is the [OneOffExecutor]( http://javadoc.jenkins-ci.org/hudson/model/OneOffExecutor.html) running the setup for the matrix job\r\n\r\n### result\r\nThe script is expected to return a [TreeMap](http://groovy.codehaus.org/JN1035-Maps). This is passed in for use but does not have to be the one returned\r\n\r\n```groovy\r\n{\r\n  x: [\r\n    { axis1: \"a\", axis2: \"x\" },\r\n    { axis1: \"b\", axis2: \"x\" }\r\n  ],\r\n  y: [\r\n    { axis1: \"a\", axis2: \"y\" },\r\n    { axis1: \"b\", axis2: \"y\" }\r\n  ]\r\n}\r\n```\r\nNotice that axis2: 'z' has not been returned, so these combinations will not be executed\r\n\r\n## Execution\r\nThe entries in the TreeMap returned will be executed in sequence.\r\n\r\nThat is to say, the first list will be executed in parallel, then the second, and so on\r\n\r\nA failure will stop the build on the next entry.</p>\r\n\r\nIf no script is specified, all combinations will be run in parallel in one go.\r\n\r\n## Scripts\r\n### Loction\r\nThe script can be in three locations\r\n* Added in directly\r\n* An absolute path available to the node running the job setting up the matrix\r\n* A relative path in the workspace\r\n\r\n###Example\r\nHow to transform the example above\r\n```groovy\r\ncombinations.each{\r\n\r\n             if(it.axis2 == 'z')\r\n                   return\r\n\r\n             result[it.axis2] = result[it.axis2] ?: []\r\n             result[it.axis2] << it\r\n}\r\n\r\nresult\r\n```\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}